@{
    ViewData["Title"] = "Generatore QR Code";
}

<div class="min-vh-100 w-100 d-flex flex-column justify-content-center align-items-center position-relative" style="background:linear-gradient(120deg,#a1c4fd 0%,#c2e9fb 100%);overflow-x:hidden;">
    <div class="position-absolute top-0 start-0 w-100" style="height:320px;z-index:0;background:linear-gradient(120deg,#6366f1 0%,#60a5fa 100%);clip-path:ellipse(80% 100% at 50% 0);"></div>
    <div class="w-100 d-flex flex-column align-items-center justify-content-center" style="max-width:540px;z-index:1;">
        <div class="card border-0 shadow-lg rounded-4 p-4 mb-4 bg-white bg-opacity-95 animate__animated animate__fadeInDown" style="backdrop-filter:blur(2px);">
            <div class="card-body">
                <h1 class="display-4 fw-bold mb-4 text-center text-primary" style="letter-spacing:1px;text-shadow:0 2px 8px #c2e9fb;">
                    <i class="bi bi-qr-code-scan me-2"></i>Genera un QR Code con Logo
                </h1>
                <form asp-action="GenerateQr" asp-controller="Home" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                    <div class="mb-3">
                        <label for="link" class="form-label">Link da codificare</label>
                        <input type="url" class="form-control form-control-lg border-primary border-2" id="link" name="link" placeholder="https://..." required value="@ViewBag.Link">
                    </div>
                    <div class="mb-3">
                        <label for="logo" class="form-label">Logo (opzionale)</label>
                        <input type="file" class="form-control form-control-lg border-info border-2" id="logo" name="logo" accept="image/*">
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-gradient btn-lg fw-bold shadow-sm" style="background:linear-gradient(90deg,#6366f1 0%,#60a5fa 100%);color:#fff;letter-spacing:1px;transition:box-shadow .2s;box-shadow:0 4px 24px #6366f1a0;">
                            <i class="bi bi-magic me-1"></i>Genera QR Code
                        </button>
                    </div>
                </form>
                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger mt-4 text-center fs-5 animate__animated animate__shakeX"><i class="bi bi-exclamation-triangle me-2"></i>@ViewBag.Error</div>
                }
            </div>
        </div>
        @if (ViewBag.QrCode != null)
        {
            <div class="card border-0 shadow-lg rounded-4 p-4 text-center mb-4 bg-white bg-opacity-100 animate__animated animate__fadeInUp" style="backdrop-filter:blur(2px);">
                <div class="card-body">
                    <h4 class="mb-3 fw-semibold text-primary"><i class="bi bi-qr-code me-2"></i>QR Code generato:</h4>
                    <img id="qrImage" src="@ViewBag.QrCode" alt="QR Code" class="img-thumbnail rounded-3 shadow-lg mb-3 border border-3 border-primary bg-white" style="max-width:320px;">
                    <div class="d-flex flex-wrap justify-content-center gap-2 mt-2">
                        <a id="downloadBtn" href="@ViewBag.QrCode" download="qrcode.png" class="btn btn-success fw-bold shadow-sm px-4 py-2"><i class="bi bi-download me-1"></i>Scarica</a>
                        <button class="btn btn-secondary fw-bold shadow-sm px-4 py-2" onclick="saveQrToBrowser()"><i class="bi bi-bookmark-plus me-1"></i>Salva nel browser</button>
                        <a class="btn btn-info fw-bold shadow-sm px-4 py-2" href="/Home/Archivio"><i class="bi bi-archive me-1"></i>Recupera QR salvati</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
<script>
function showToast(message, type = 'success', icon = '') {
    // Crea un contenitore per i toast in alto a destra se non esiste
    let toastContainer = document.getElementById('toastr-container');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.id = 'toastr-container';
        toastContainer.style.position = 'fixed';
        toastContainer.style.top = '32px';
        toastContainer.style.right = '32px';
        toastContainer.style.zIndex = 20000;
        toastContainer.style.display = 'flex';
        toastContainer.style.flexDirection = 'column';
        toastContainer.style.gap = '16px';
        document.body.appendChild(toastContainer);
    }
    const toast = document.createElement('div');
    toast.className = `toast custom-toast align-items-center border-0 show shadow-lg px-4 py-3 animate__animated animate__fadeInDown`;
    toast.style.position = 'relative';
    toast.style.fontSize = '1.15rem';
    toast.style.minWidth = '320px';
    toast.style.maxWidth = '90vw';
    toast.style.opacity = '0.98';
    toast.style.background = type === 'success'
        ? 'linear-gradient(90deg,#22c55e 0%,#16a34a 100%)'
        : type === 'danger'
            ? 'linear-gradient(90deg,#ef4444 0%,#b91c1c 100%)'
            : 'linear-gradient(90deg,#6366f1 0%,#60a5fa 100%)';
    toast.style.color = '#fff';
    toast.style.borderRadius = '1.25rem';
    toast.style.boxShadow = '0 8px 32px #0002, 0 2px 8px #0001';
    toast.style.backdropFilter = 'blur(2px)';
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    toast.innerHTML = `
        <div class="d-flex align-items-center">
            <div class="toast-body fw-semibold flex-grow-1 d-flex align-items-center" style="font-size:1.15em;">
                ${icon ? `<i class="bi ${icon} me-2 fs-3"></i>` : ''}
                <span>${message}</span>
            </div>
            <button type="button" class="btn-close btn-close-white ms-3" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    `;
    toastContainer.appendChild(toast);
    toast.querySelector('.btn-close').onclick = () => {
        toast.classList.remove('show', 'animate__fadeInDown');
        toast.classList.add('animate__fadeOutUp');
        setTimeout(() => toastContainer.removeChild(toast), 400);
    };
    setTimeout(() => {
        toast.classList.remove('show', 'animate__fadeInDown');
        toast.classList.add('animate__fadeOutUp');
        setTimeout(() => {
            if (toastContainer.contains(toast)) toastContainer.removeChild(toast);
        }, 400);
    }, 10000);
}

function saveQrToBrowser() {
    const qrImg = document.getElementById('qrImage');
    if (!qrImg) return;
    let saved = JSON.parse(localStorage.getItem('savedQrs') || '[]');
    saved.push({ img: qrImg.src, date: new Date().toLocaleString() });
    localStorage.setItem('savedQrs', JSON.stringify(saved));
    showToast('QR Code salvato nel browser!', 'success', 'bi-bookmark-check-fill');
}
</script>
<!-- Assicurati che Bootstrap 5, Bootstrap Icons e Metronic siano caricati nel layout. -->
}
